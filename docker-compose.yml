services:
  zookeeper:
    restart: always
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-1:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka-1
    ports:
      - "9092:9092"
    volumes:
      - "kafka-1-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9091,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-1:9091,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    restart: always

  kafka-2:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka-2
    ports:
      - "9094:9094"
    volumes:
      - "kafka-2-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-2:9093,EXTERNAL://localhost:9094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
      - kafka-1
    restart: always

  data-collector-service:
    build:
      context: .
      dockerfile: ./data-collector-service/data-collector-service.dockerfile
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    env_file: ".env"

  central-service:
    build:
      context: central-service
      dockerfile: ./central-service.dockerfile
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
    env_file: ".env"

volumes:
  kafka-1-volume:
  kafka-2-volume:
  zookeeper-volume:
